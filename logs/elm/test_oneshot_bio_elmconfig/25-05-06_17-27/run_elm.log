[2025-05-06 17:27:34,117][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for SPS. Feature removed!
[2025-05-06 17:27:34,118][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for AvgIpc. Feature removed!
[2025-05-06 17:27:34,118][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for NumAmideBonds. Feature removed!
[2025-05-06 17:27:34,119][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for NumAtomStereoCenters. Feature removed!
[2025-05-06 17:27:34,119][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for NumBridgeheadAtoms. Feature removed!
[2025-05-06 17:27:34,120][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for NumHeterocycles. Feature removed!
[2025-05-06 17:27:34,120][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for NumSpiroAtoms. Feature removed!
[2025-05-06 17:27:34,121][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for NumUnspecifiedAtomStereoCenters. Feature removed!
[2025-05-06 17:27:34,121][deepchem.feat.molecule_featurizers.rdkit_descriptors][WARNING] - No normalization for Phi. Feature removed!
[2025-05-06 17:27:37,212][tensorflow][WARNING] - From C:\Users\Alona\anaconda3\envs\OpenELM_GenomicQD\lib\site-packages\tensorflow\python\util\deprecation.py:588: calling function (from tensorflow.python.eager.polymorphic_function.polymorphic_function) with experimental_relax_shapes is deprecated and will be removed in a future version.
Instructions for updating:
experimental_relax_shapes is deprecated, use reduce_retracing instead
[2025-05-06 17:27:37,367][deepchem.models.torch_models][WARNING] - Skipped loading modules with pytorch-geometric dependency, missing a dependency. No module named 'torch_geometric'
[2025-05-06 17:27:38,970][deepchem.models][WARNING] - Skipped loading modules with pytorch-geometric dependency, missing a dependency. cannot import name 'DMPNN' from 'deepchem.models.torch_models' (C:\Users\Alona\anaconda3\envs\OpenELM_GenomicQD\lib\site-packages\deepchem\models\torch_models\__init__.py)
[2025-05-06 17:27:38,974][deepchem.models][WARNING] - Skipped loading modules with pytorch-lightning dependency, missing a dependency. No module named 'lightning'
[2025-05-06 17:27:38,976][deepchem.models][WARNING] - Skipped loading some Jax models, missing a dependency. No module named 'jax'
[2025-05-06 17:27:45,309][tensorflow][WARNING] - From C:\Users\Alona\anaconda3\envs\OpenELM_GenomicQD\lib\site-packages\tf_keras\src\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.

[2025-05-06 17:27:45,891][root][INFO] - Using device: cuda
[2025-05-06 17:27:50,960][root][INFO] - Behavioral descriptor min: [0.06 0.02 0.04], max: [0.58 0.54 0.58]
[2025-05-06 17:27:51,503][tensorflow][WARNING] - From C:\Users\Alona\anaconda3\envs\OpenELM_GenomicQD\lib\site-packages\keras\src\backend\tensorflow\core.py:219: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

[2025-05-06 17:27:51,745][root][INFO] - Oracle params:
rank_correlation: 0.8707294629657666
model_kwargs: {'hidden_size': 120, 'activation': 'relu', 'kernel_size': 8, 'num_blocks': 2, 'epochs': 5, 'shuffle_buffer': 260000, 'learning_rate': 0.001}
split_kwargs: {'val_fraction': 0.07142857142, 'subset': None, 'shard_size': 280000, 'to_disk': True, 'disk_target': 'utr/oracle_data/original_v0_minmax_orig/oracle_train_split/split', 'is_absolute': None}
[2025-05-06 17:28:25,555][root][INFO] - index of initial sequences:
 [34500 36937 54025  3037 80786]
[2025-05-06 17:29:11,760][openelm.algorithms.map_elites][INFO] - Final Downsampled map has 128 solutions.
[2025-05-06 17:29:11,761][openelm.environments.bioseq.utils.evaluation][INFO] - Evaluating 627 genomes and 128 down-sampled genomes against the oracle and reference set.
[2025-05-06 17:29:18,697][tensorflow][WARNING] - 5 out of the last 26 calls to <function TensorFlowTrainer.make_predict_function.<locals>.one_step_on_data_distributed at 0x000002715DCE6D40> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
